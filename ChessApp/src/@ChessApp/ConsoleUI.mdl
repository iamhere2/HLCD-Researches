// implicit, by convention:
/*
    private module ChessApp.ConsoleUI
    {
        component ChessApp.ConsoleUI
        {
            ...<all the content of this file>...
        }
    }
*/

// We have to import System.Console to use interface types,
// but we can't call Console commands without explicit requiring interface link
// from parent component
import Concepts, IStorage, System.Console, IPlayer;

provides
{
    IConsoleApplication via CommandCycle,
    IPlayer via TurnCmdHandler
}

requires
{
    IConsoleIO as Console,
    IStorage as Storage,
    IGameFlow as GameFlow,
    IRulesEngine as RulesEngine,
}

children
{
    CommandParser with { CommandParser, TurnCmdHandler, GameCmdHandler, BoardPrinter },
    BoardPrinter with { Console },
    GameCmdHandler with { Storage, GameFlow },
    TurnCmdHandler with { RulesEngine },
    CommandCycle with { Console, GameCmdHandler, TurnCmdHandler, CommandParser }
}

// private
{
    // and again, here are no "body" in this component,
    // because all the implementation or provided interfaces
    // are obtained by interconnection of children components
}
